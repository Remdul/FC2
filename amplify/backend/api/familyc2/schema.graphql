type Member @model @auth(rules: [{allow: public}]) {
  id: ID!
  userName: String
  createdDate: String
  firstLogin: Boolean
  userEmail: String
  userSub: String
  firstName: String
}

type Note @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  points: Int!
  description: String
}

type User
  @model
  @aws_cognito_user_pools
  @key(name: "findUsername", fields: ["username"], queryField:    "findUsername") 
  @auth(
    rules: [
      {
       allow: owner
        ownerField: "id"
        operations: [create, read, update, delete]
      }
    ]
  ) {
    id: ID
    username: String!
    firstName: String
    lastName: String
    email: AWSEmail!
    location: String
    createdAt: AWSDateTime
    updatedAt: AWSDateTime
  }